{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Maria\\\\Aptugo\\\\build\\\\ESCRIBANIA\\\\back-end\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Maria\\\\Aptugo\\\\build\\\\ESCRIBANIA\",\"filename\":\"C:\\\\Users\\\\Maria\\\\Aptugo\\\\build\\\\ESCRIBANIA\\\\back-end\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Maria\\\\Aptugo\\\\build\\\\ESCRIBANIA\",\"plugins\":[],\"presets\":[]}:7.13.10:development":{"value":{"code":"const dotenv = require('dotenv');\ndotenv.config({\n  path: './config/.env.development'\n});\nconst fs = require('fs');\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst fileupload = require('express-fileupload');\nconst app = express();\napp.set('filesFolder', __dirname + '/../dist/img');\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, XMLHttpRequest, authorization, *');\n  res.header('Access-Control-Allow-Methods', '*');\n  next();\n});\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json({\n  limit: '10mb'\n}));\napp.use(fileupload());\napp.all('*', checkReq);\nfunction checkReq(req, res, next) {\n  if (req.files) {\n    const keys = Object.keys(req.files);\n    keys.forEach(key => {\n      const regex = /(.*)\\[([0-9]*)\\]/gm;\n      let m = regex.exec(key);\n      if (m) {\n        if (m[2] === '0') {\n          req.body[m[1]] = [];\n          req.files[m[1]] = [];\n        }\n        req.body[m[1]].push(req.files[key]);\n        req.files[m[1]].push(req.files[key]);\n        delete req.files[key];\n      }\n    });\n  }\n  next();\n}\nconst dbConfig = require('./config/database.config.js');\nconst mongoose = require('mongoose');\nmongoose.Promise = global.Promise;\n\n// Connecting to the database\nmongoose.set('strictQuery', false);\nmongoose.connect(dbConfig.url, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => {\n  console.log('Successfully connected to the database');\n}).catch(err => {\n  console.log('Could not connect to the database. Exiting now...', err);\n  // process.exit();\n});\nrequire('./app/routes/apiRoutes.js')(app);\napp.use('/images', express.static(__dirname + '/../dist/img'));\nlet tries = 0;\nfunction doListen() {\n  const port = 4567;\n  const server = app.listen(port, '0.0.0.0').on('listening', () => {\n    console.log(`Aptugo app listening on port ${port}!`);\n  }).on('error', err => {\n    if (err.errno === 'EADDRINUSE') {\n      if (tries < 3) {\n        console.log('Port busy, waiting a couple of seconds...');\n        tries++;\n        setTimeout(doListen, 2000);\n      } else {\n        console.log('Tired of waiting, will kill the process...');\n        exec(`kill -9 $(lsof -t -i:${port})`);\n        setTimeout(doListen, 2000);\n      }\n    } else {\n      console.log(err);\n    }\n  }).on('connection', conn => {\n    console.log('connection');\n  });\n}\ndoListen();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["dotenv","require","config","path","fs","express","bodyParser","fileupload","app","set","__dirname","use","req","res","next","header","urlencoded","extended","json","limit","all","checkReq","files","keys","Object","forEach","key","regex","m","exec","body","push","dbConfig","mongoose","Promise","global","connect","url","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","static","tries","doListen","port","server","listen","on","errno","setTimeout","conn"],"sourceRoot":"C:\\Users\\Maria\\Aptugo\\build\\ESCRIBANIA\\back-end\\","sources":["index.js"],"sourcesContent":["const dotenv = require('dotenv')\ndotenv.config({ path: './config/.env.development' })\nconst fs = require('fs')\nconst express = require('express')\nconst bodyParser = require('body-parser')\nconst fileupload = require('express-fileupload')\n\nconst app = express()\napp.set('filesFolder', __dirname + '/../dist/img')\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*')\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, XMLHttpRequest, authorization, *')\n  res.header('Access-Control-Allow-Methods', '*')\n  next()\n})\n\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json({ limit: '10mb' }))\napp.use(fileupload())\napp.all('*', checkReq)\nfunction checkReq(req, res, next) {\n  if (req.files) {\n    const keys = Object.keys(req.files)\n    keys.forEach((key) => {\n      const regex = /(.*)\\[([0-9]*)\\]/gm\n      let m = regex.exec(key)\n      if (m) {\n        if (m[2] === '0') {\n          req.body[m[1]] = []\n          req.files[m[1]] = []\n        }\n        req.body[m[1]].push(req.files[key])\n        req.files[m[1]].push(req.files[key])\n        delete req.files[key]\n      }\n    })\n  }\n  next()\n}\n\nconst dbConfig = require('./config/database.config.js')\nconst mongoose = require('mongoose')\n\nmongoose.Promise = global.Promise\n\n// Connecting to the database\nmongoose.set('strictQuery', false)\nmongoose\n  .connect(dbConfig.url, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  })\n  .then(() => {\n    console.log('Successfully connected to the database')\n  })\n  .catch((err) => {\n    console.log('Could not connect to the database. Exiting now...', err)\n    // process.exit();\n  })\n\nrequire('./app/routes/apiRoutes.js')(app)\n\napp.use('/images', express.static(__dirname + '/../dist/img'))\n\nlet tries = 0\n\nfunction doListen() {\n  const port = 4567\n  const server = app\n    .listen(port, '0.0.0.0')\n    .on('listening', () => {\n      console.log(`Aptugo app listening on port ${port}!`)\n    })\n    .on('error', (err) => {\n      if (err.errno === 'EADDRINUSE') {\n        if (tries < 3) {\n          console.log('Port busy, waiting a couple of seconds...')\n          tries++\n          setTimeout(doListen, 2000)\n        } else {\n          console.log('Tired of waiting, will kill the process...')\n          exec(`kill -9 $(lsof -t -i:${port})`)\n          setTimeout(doListen, 2000)\n        }\n      } else {\n        console.log(err)\n      }\n    })\n    .on('connection', (conn) => {\n      console.log('connection')\n    })\n}\n\ndoListen()\n"],"mappings":"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","ignoreList":[]}},"mtime":1736807486141}}